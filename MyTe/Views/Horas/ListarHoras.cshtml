<!DOCTYPE html>
<html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <style>
        .center-text {
            text-align: center;
        }

        .error {
            color: red;
            display: none;
        }

        .is-invalid {
            border-color: red;
        }
    </style>
    <script>
        let currentStartDate = new Date();
        let currentQuinzena = 1;

        $(document).ready(function () {
            updateTableHeaders(currentStartDate, currentQuinzena);

            $("body").on('input', 'input.hour-input', function () {
                calculateTotalHours();
            });

            $("form").on('submit', function (event) {
                if (!validateHours()) {
                    event.preventDefault(); // Impede o envio do formulário se a validação falhar
                    $(".error").show();
                } else {
                    $(".error").hide();
                }
            });
        });

        function calculateTotalHours() {
            let total = 0;
            let daysInQuinzena = currentQuinzena === 1 ? 15 : new Date(currentStartDate.getFullYear(), currentStartDate.getMonth() + 1, 0).getDate() - 15;
            let columnTotals = Array(daysInQuinzena).fill(0);

            $("tr.data-row").each(function () {
                let rowTotal = 0;
                $(this).find("input.hour-input:visible").each(function (index) {
                    let val = parseFloat($(this).val()) || 0;
                    rowTotal += val;
                    columnTotals[index] += val;
                });
                $(this).find(".row-total").text(rowTotal);
                total += rowTotal;
            });

            $("#totalHours").text(total);
            columnTotals.forEach((colTotal, index) => {
                $(`#column-total-${index + 1}`).text(colTotal);
            });
        }

        function validateHours() {
            let valid = true;
            let displayDate = new Date(currentStartDate);
            displayDate.setDate(currentQuinzena === 1 ? 1 : 16);

            let daysInQuinzena = currentQuinzena === 1 ? 15 : new Date(displayDate.getFullYear(), displayDate.getMonth() + 1, 0).getDate() - 15;

            for (let i = 0; i < daysInQuinzena; i++) {
                let dayOfWeek = displayDate.getDay();
                if (dayOfWeek !== 0 && dayOfWeek !== 6) {
                    let dayTotal = 0;
                    $(`input[data-day="${i + 1}"]`).each(function () {
                        dayTotal += parseFloat($(this).val()) || 0;
                    });

                    if (dayTotal < 8) {
                        valid = false;
                        $(`input[data-day="${i + 1}"]`).addClass("is-invalid");
                    } else {
                        $(`input[data-day="${i + 1}"]`).removeClass("is-invalid");
                    }
                }
                displayDate.setDate(displayDate.getDate() + 1);
            }
            return valid;
        }

        function navigateQuinzena(quinzenaChange) {
            currentQuinzena += quinzenaChange;
            let minimumDate = new Date('2024-01-01');

            if (currentQuinzena < 1 && currentStartDate > minimumDate) {
                currentQuinzena = 2;
                currentStartDate.setMonth(currentStartDate.getMonth() - 1);
            } else if (currentQuinzena > 2) {
                currentQuinzena = 1;
                currentStartDate.setMonth(currentStartDate.getMonth() + 1);
            }

            if (currentStartDate >= minimumDate) {
                updateTableHeaders(currentStartDate, currentQuinzena);
            } else {
                currentQuinzena -= quinzenaChange;
            }
        }

        function updateTableHeaders(startDate, quinzena) {
            let headers = "<th>Selecione a WBS</th>";
            let displayDate = new Date(startDate);

            if (quinzena === 1) {
                displayDate.setDate(1);
            } else {
                displayDate.setDate(16);
            }

            let currentDate = new Date(displayDate);
            let daysInQuinzena = quinzena === 1 ? 15 : new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate() - 15;

            for (let i = 0; i < daysInQuinzena; i++) {
                let dayName = currentDate.toLocaleString('pt-BR', { weekday: 'short' });
                let day = currentDate.getDate();
                headers += `<th>${dayName}<br />${day}</th>`;
                currentDate.setDate(currentDate.getDate() + 1);
            }

            headers += "<th>Total</th>";
            $("#table-headers").html(headers);

            let columnTotalsRow = "<td>Total:</td>";
            for (let i = 1; i <= daysInQuinzena; i++) {
                columnTotalsRow += `<td id="column-total-${i}">0</td>`;
            }
            columnTotalsRow += "<td></td>";
            $("#column-totals").html(columnTotalsRow);

            let startDateFormatted = formatDate(displayDate);
            let endDate = new Date(displayDate);
            endDate.setDate(endDate.getDate() + daysInQuinzena - 1);
            let endDateFormatted = formatDate(endDate);
            $("#currentPeriod").text(`Período: ${startDateFormatted} a ${endDateFormatted}`);

            $("tr.data-row").each(function () {
                $(this).find("td").each(function (index) {
                    if (index <= daysInQuinzena) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            disableWeekendInputs(daysInQuinzena);
            calculateTotalHours();
        }

        function disableWeekendInputs(daysInQuinzena) {
            let displayDate = new Date(currentStartDate);
            displayDate.setDate(currentQuinzena === 1 ? 1 : 16);

            for (let i = 0; i < daysInQuinzena; i++) {
                let dayOfWeek = displayDate.getDay();
                if (dayOfWeek === 0 || dayOfWeek === 6) {
                    $(`input[data-day="${i + 1}"]`).prop('disabled', true);
                } else {
                    $(`input[data-day="${i + 1}"]`).prop('disabled', false);
                }
                displayDate.setDate(displayDate.getDate() + 1);
            }
        }

        function formatDate(date) {
            let day = String(date.getDate()).padStart(2, '0');
            let month = String(date.getMonth() + 1).padStart(2, '0');
            let year = date.getFullYear();
            return `${day}/${month}/${year}`;
        }
    </script>
</head>
<body>
    <div class="container">
        <div class="center-text">
            <h1 class="mb-4">Lançar Horas</h1>
        </div>
        <form asp-action="AdicionarHora">
            <div class="tabelas">
                <table class="table table-bordered">
                    <thead>
                        <tr id="table-headers"></tr>
                    </thead>
                    <tbody>
                        @for (int row = 0; row < 4; row++)
                        {
                            <tr class="data-row">
                                <td>
                                    <div class="col col-lg">
                                        <select class="form-select">
                                            <option value="0">Selecione</option>
                                            @foreach (var wbs in (SelectList)ViewBag.ListaDeWBS)
                                            {
                                                <option value="@wbs.Value">@wbs.Text</option>
                                            }
                                        </select>
                                    </div>
                                </td>
                                @for (int col = 1; col <= 31; col++) // Ajustado para lidar com até 31 dias
                                {
                                    <td class="col col-lg">
                                        <input type="text" class="form-control hour-input" data-day="@col" />
                                    </td>
                                }
                                <td class="row-total">0</td>
                            </tr>
                        }
                        <tr id="column-totals"></tr>
                        <tr>
                            <td colspan="32" class="text-end">
                                <!-- Ajustado para lidar com até 31 dias -->
                                Total de horas: <span id="totalHours">0</span>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="error">Cada dia útil deve ter pelo menos 8 horas registradas.</div>
            </div>
            <div class="text-center mt-3">
                <h5 id="currentPeriod"></h5>
                <button class="btn btn-secondary" type="button" onclick="navigateQuinzena(-1)">← Quinzena Anterior</button>
                <button class="btn btn-secondary" type="button" onclick="navigateQuinzena(1)">Próxima Quinzena →</button>
            </div>
            <div class="text-end mt-3">
                <button type="submit" class="btn btn-primary">Incluir horas</button>
            </div>
        </form>
    </div>
</body>
</html>