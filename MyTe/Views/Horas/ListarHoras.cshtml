@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<MyTe.Models.Entities.LancamentoDeHora>


@{
    ViewData["Title"] = "ListarHoras";
}


<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body>
    <br />
    <h1 class="mb-4 text-center" style="font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2); color: #890078;">Consulte seus lançamentos:</h1>
    <div class="container">
        <p>
            <a asp-action="AdicionarHora" class="btn btn-outline-dark">
                <i class="bi bi-arrow-left"></i>
            </a>
        </p>
        <table class="tabelas">
            <thead>
                <tr> 
                    <th>Funcionário</th>
                    <th>Data do Registro</th>
                    <th>Horas Trabalhadas</th>
                    <th>Código WBS</th>
                    <th></th>
                    <!-- Adicione outras colunas, se necessário -->
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Funcionario!.Nome</td>
                    <td>@item.RegistroData.ToShortDateString()</td>
                    <td>@item.HorasTrabalhadas</td>
                    <td>@item.TipoWBS!.CodigoWBS - @item.TipoWBS.Descricao</td>
                    <td>
                        <a asp-action="RemoverHora" asp-route-id="@item.Id"><i class="bi bi-trash3-fill custom-icon"></i></a>
                    </td>
                    <!-- Adicione outras colunas, se necessário -->
                </tr>
            }
            </tbody>
        </table>
        <div class="pagination-container">
            <div aria-label="Page navigation example">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ListarHoras", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only"></span>
                            </a>
                        </li>
                    }
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ListarHoras", new { page = i })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ListarHoras", new { page = Model.PageNumber + 1 })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only"></span>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            $('#searchForm').submit(function (e) {
                e.preventDefault();
                var form = $(this);
                var url = form.attr('action');
                var formData = form.serialize();
                $.get(url, formData, function (data) {
                    // Atualize a tabela com os resultados da busca
                    // Aqui você pode usar JavaScript para atualizar a tabela de acordo com os resultados da busca
                });
            });
        });
    </script>
</body>
</html>