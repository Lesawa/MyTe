@using MyTe.Controllers
@model IEnumerable<MyTe.Models.Entities.LancamentoDeHora>

@{

    ViewData["Title"] = "Lançar Horas";

}

<!DOCTYPE html>

<html>

<head>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <link href="styles.css" rel="stylesheet">

    <link href="~/css/stylesheet.css" rel="stylesheet" />

</head>

<body>

    <div class="container">
        <!-- Título -->
        <h1 class="mb-4">Lançamento das Horas</h1>
        <!-- Botão de Navegação -->
        <div class="mt-3">
            <button id="btnQuinzenaAnterior" class="btn btn-outline-dark">Quinzena Anterior</button>
            <button id="btnProximaQuinzena" class="btn btn-outline-dark">Próxima Quinzena</button>
        </div>
        <br />
        <!-- Botão para incluir dados na quinzena -->

        <button id="btnIncluirDados" class="btn btn-primary">Incluir Dados na Quinzena</button>
        <!-- Formulário -->

        <div class="table-responsive">

            <table id="tabelaHoras" class="tabelas tabela-com-imagem">
                <!-- Cabeçalho da Tabela -->

                <thead id="cabecalhoTabela">
                    <tr>
                        <th style="width: 10%;">WBS</th>

                        <!-- Colunas para as datas -->
                        @for (int i = 0; i < 15; i++)
                        {
                            <th class="dias" style="width: 6.67%;"></th> <!-- Divida 100% por 15 -->
                        }
                        <th style="width: 10%;">Total Horas</th>
                    </tr>
                </thead>
                <!-- Corpo da Tabela -->

                <tbody>
                    <!-- Linhas para lançamento de horas -->
                    @for (int row = 0; row < 4; row++)
                    {
                        <tr>
                            <!-- Coluna para seleção da WBS -->

                            <td style="width: 10%;">
                                <div class="col col-lg">
                                    <select class="form-select" style="width: auto;">
                                        <option value="0">WBS</option>
                                        @foreach (var wbs in (SelectList)ViewBag.ListaDeWBS)
                                        {
                                            <option value="@wbs.Value">@wbs.Text</option>
                                        }

                                    </select>
                                </div>
                            </td>
                            <!-- Colunas para entrada de horas -->
                            @for (int col = 0; col < 15; col++)
                            {
                                <td class="col col-lg" style="width: 6.67%;">
                                    <input type="text" class="form-control" />
                                </td>
                            }
                            <!-- Coluna para exibir o total de horas -->

                            <td class="col col-lg" style="width: 10%;"></td>
                        </tr>
                    }
                    <!-- Linha para exibir o total por dia -->

                    <tr>
                        <td colspan="16" style="text-align: left; font-weight: bold;">Total por dia</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <!-- Script JavaScript -->

        <script>

            var dataAtual = new Date(2024, 0, 1); // Define a data inicial como 01/01/2024

            var diasPorQuinzena = 15;

            // Função para atualizar o cabeçalho da tabela com as datas das quinzenas

            function atualizarCabecalhoQuinzena(data) {

                var cabecalho = document.getElementById("cabecalhoTabela");

                var colunasData = cabecalho.querySelectorAll(".dias");

                var inicioQuinzena = new Date(data);

                colunasData.forEach(function (coluna, index) {

                    var dataAtualizada = new Date(inicioQuinzena);

                    dataAtualizada.setDate(dataAtualizada.getDate() + index);

                    var textoData = dataAtualizada.getDate() + "/" + (dataAtualizada.getMonth() + 1) + "/" + dataAtualizada.getFullYear();

                    coluna.textContent = textoData;

                });

            }

            // Função para navegar para a quinzena anterior

            document.getElementById("btnQuinzenaAnterior").addEventListener("click", function () {

                var dataAnterior = new Date(dataAtual);

                dataAnterior.setDate(dataAnterior.getDate() - diasPorQuinzena);

                // Verifica se a data anterior é após 2023

                if (dataAnterior.getFullYear() >= 2024) {

                    dataAtual.setDate(dataAtual.getDate() - diasPorQuinzena);

                    atualizarCabecalhoQuinzena(dataAtual);

                }

            });

            // Função para navegar para a próxima quinzena

            document.getElementById("btnProximaQuinzena").addEventListener("click", function () {

                var dataProxima = new Date(dataAtual);

                dataProxima.setDate(dataProxima.getDate() + diasPorQuinzena);

                // Verifica se a data posterior é antes de 2025

                if (dataProxima.getFullYear() <= 2024) {

                    dataAtual.setDate(dataAtual.getDate() + diasPorQuinzena);

                    atualizarCabecalhoQuinzena(dataAtual);

                }

            });

            // Inicialização: atualizar o cabeçalho da tabela com a quinzena atual

            atualizarCabecalhoQuinzena(dataAtual);

            // Função para enviar o formulário de lançamento de horas

            document.getElementById("formLancamentoHoras").addEventListener("submit", function (event) {

                // Evita o envio padrão do formulário

                event.preventDefault();

                // Lógica para coletar e processar os dados do formulário

                alert("Dados do formulário foram enviados.");

            });

            // Função para adicionar dados na tabela

            function adicionarDadosNaTabela(data, dados) {

                var dataQuinzenaAtual = new Date(dataAtual);

                var dataProximaQuinzena = new Date(dataAtual);

                dataProximaQuinzena.setDate(dataProximaQuinzena.getDate() + diasPorQuinzena);

                // Verifica se a data está dentro da quinzena atual

                if (data >= dataQuinzenaAtual && data < dataProximaQuinzena) {

                    // Insere os dados na tabela

                    // Por exemplo, você pode atualizar os campos na tabela com os dados fornecidos

                    console.log("Dados adicionados na quinzena atual:", dados);

                } else {

                    // Atualiza a data da quinzena para a nova quinzena

                    dataAtual = new Date(data);

                    atualizarCabecalhoQuinzena(dataAtual);

                    // Insere os dados na tabela

                    // Por exemplo, você pode limpar a tabela e adicionar os dados fornecidos na nova quinzena

                    console.log("Dados adicionados em uma nova quinzena:", dados);

                }

            }

            // Exemplo de uso da função para adicionar dados na tabela
            var dataExemplo = new Date(2024, 0, 10); // Exemplo de data para adicionar dados
            var dadosExemplo = ["Dado 1", "Dado 2", "Dado 3"]; // Exemplo de dados a serem adicionados
            adicionarDadosNaTabela(dataExemplo, dadosExemplo);
            // Função para adicionar dados na quinzena atual ao clicar no botão
            document.getElementById("btnIncluirDados").addEventListener("click", function () {
                var dataAtual = new Date(); // Data atual
                // Capturar os dados da WBS e das horas trabalhadas inseridos pelo usuário
                var dadosParaIncluir = capturarDadosDoFormulario();
                // Verificar se os dados foram inseridos corretamente
                if (dadosParaIncluir !== null) {
                    // Adicionar os dados na tabela da quinzena atual
                    adicionarDadosNaTabela(dataAtual, dadosParaIncluir);
                } else {
                    // Exibir uma mensagem de erro se os dados estiverem incompletos ou inválidos
                    alert("Por favor, preencha todos os campos corretamente.");
                }
            });

            // Função para capturar os dados da WBS e das horas trabalhadas inseridos pelo usuário
            function capturarDadosDoFormulario() {
                var dados = {
                    wbs: document.getElementById("selectWBS").value, // Capturar o valor selecionado da WBS

                    horas: [] // Array para armazenar as horas trabalhadas
                };

                // Capturar as horas trabalhadas inseridas pelo usuário
                var inputsHoras = document.querySelectorAll(".input-horas");
                inputsHoras.forEach(function (input) {
                    dados.horas.push(input.value);
                });

                // Verificar se todos os campos foram preenchidos
                if (dados.wbs !== "0" && dados.horas.every(hora => hora.trim() !== "")) {
                    return dados;
                } else {
                    return null; // Retornar null se algum campo estiver vazio
                }
            }

            // Função para adicionar dados na tabela

            function adicionarDadosNaTabela(data, dados) {
                var dataQuinzenaAtual = new Date(dataAtual);
                var dataProximaQuinzena = new Date(dataAtual);
                dataProximaQuinzena.setDate(dataProximaQuinzena.getDate() + diasPorQuinzena);
                // Verificar se a data está dentro da quinzena atual
                if (data >= dataQuinzenaAtual && data < dataProximaQuinzena) {
                    // Insere os dados na tabela da quinzena atual
                    console.log("Dados adicionados na quinzena atual:", dados);
                } else {
                    // Exibe uma mensagem de erro, pois os dados não estão na quinzena atual
                    alert("Os dados devem estar na quinzena atual.");
                }
            }
            var numeroQuinzenaAtual = 1;
        </script>

</body>

</html>